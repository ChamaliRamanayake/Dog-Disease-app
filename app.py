import streamlit as st
import tensorflow as tf
from tensorflow import keras
import numpy as np
import joblib
from PIL import Image

st.set_page_config(page_title="Dog Skin Disease Classifier", layout="centered")

# ---------------------------
# Load Feature Extractor
# ---------------------------
@st.cache_resource
def load_feature_extractor():
    base_model = keras.applications.MobileNetV2(
        input_shape=(224, 224, 3),
        include_top=False,
        weights="imagenet"
    )
    base_model.trainable = False
    model = keras.Sequential([
        base_model,
        keras.layers.GlobalAveragePooling2D()
    ])
    return model

# ---------------------------
# Load Classifier
# ---------------------------
@st.cache_resource
def load_classifier():
    return joblib.load("dog_skin_disease_classifier.pkl")

feature_extractor = load_feature_extractor()
classifier = load_classifier()

# ---------------------------
# Disease Information (EN + SI)
# ---------------------------
disease_info = {
    "Atopic Dermatitis": {
        "en": {
            "title": "Atopic Dermatitis",
            "description": "A chronic skin condition caused by allergies. Common in dogs with sensitive skin.",
            "symptoms": ["Itching", "Redness", "Rashes", "Licking paws"],
            "treatment": ["Antihistamines", "Special shampoos", "Avoid allergens"]
        },
        "si": {
            "title": "‡∂á‡∂ß‡∑ú‡∂¥‡∑í‡∂ö‡∑ä ‡∂©‡∂ª‡∑ä‡∂∏‡∂ß‡∂∫‡∑í‡∂ß‡∑í‡∑É‡∑ä",
            "description": "‡∂á‡∂Ω‡∂ª‡∑ä‡∂¢‡∑í ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä‡∑ô‡∂±‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∂± ‡∂Ø‡∑í‡∂ú‡∑î‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂≠‡∂≠‡∑ä‡∂≠‡∑ä‡∑Ä‡∂∫‡∂ö‡∑ä. ‡∑É‡∂Ç‡∑Ä‡∑ö‡∂Ø‡∑ì ‡∑É‡∂∏ ‡∂á‡∂≠‡∑í ‡∂∂‡∂Ω‡∑ä‡∂Ω‡∑è‡∂ß ‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫‡∂∫.",
            "symptoms": ["‡∂ö‡∑í‡∂ª‡∑í‡∂ö‡∑í‡∂ª‡∑ì‡∂∏", "‡∂ª‡∂≠‡∑î ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂∏‡∂≠‡∑ä ‡∑Ä‡∑ì‡∂∏", "‡∂ö‡∑î‡∂ª‡∑î‡∑Ö‡∑î", "‡∂¥‡∑è‡∂Ø ‡∂Ω‡∑í‡∑Ñ‡∑è‡∂∏"],
            "treatment": ["‡∂á‡∂±‡∑ä‡∂ß‡∑í‡∑Ñ‡∑í‡∑É‡∑ä‡∂ß‡∂∏‡∑í‡∂±‡∑ä", "‡∑Ä‡∑í‡∑Å‡∑ö‡∑Ç ‡∑Ç‡∑ê‡∂∏‡∑ä‡∂¥‡∑î", "‡∂á‡∂Ω‡∂ª‡∑ä‡∂¢‡∑í ‡∑Ä‡∂Ω‡∂ö‡∑ä‡∑Ä‡∑ì‡∂∏"]
        }
    },
    "Flea Allergy Dermatitis": {
        "en": {
            "title": "Flea Allergy Dermatitis",
            "description": "Skin irritation caused by allergic reaction to flea saliva.",
            "symptoms": ["Severe itching", "Hair loss", "Skin sores"],
            "treatment": ["Flea control", "Topical creams", "Medications"]
        },
        "si": {
            "title": "‡∂¥‡∑í‡∂Ω‡∑í‡∑É‡∑ä‡∑É‡∑è ‡∂á‡∂Ω‡∂ª‡∑ä‡∂¢‡∑í ‡∂©‡∂ª‡∑ä‡∂∏‡∂ß‡∂∫‡∑í‡∂ß‡∑í‡∑É‡∑ä",
            "description": "‡∂¥‡∑í‡∂Ω‡∑í‡∑É‡∑ä‡∑É‡∑è ‡∑Ñ‡∑í‡∂≠‡∂ö‡∂Ω‡∑è‡∂∏‡∂ß ‡∂á‡∂≠‡∑í‡∑Ä‡∂± ‡∑É‡∂∏‡∑ö ‡∂á‡∂Ω‡∂ª‡∑ä‡∂¢‡∑í.",
            "symptoms": ["‡∂â‡∂≠‡∑è‡∂∏‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑í‡∂∏", "‡∂á‡∑Ö‡∑î ‡∑Ä‡∑ê‡∂ß‡∑ì‡∂∏", "‡∑É‡∂∏‡∑ö ‡∂¥‡∑í‡∂ß‡∑î‡∑É‡∑î‡∂±‡∑ä"],
            "treatment": ["‡∂¥‡∑í‡∂Ω‡∑í‡∑É‡∑ä‡∑É‡∑è ‡∂¥‡∑è‡∂Ω‡∂±‡∂∫", "‡∂¥‡∑ä‚Äç‡∂ª‡∑è‡∂Ø‡∑ö‡∑Å‡∑ì‡∂∫ ‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂∏‡∑ä", "‡∂ñ‡∑Ç‡∂∞"]
        }
    },
    "Pyoderma": {
        "en": {
            "title": "Pyoderma",
            "description": "A bacterial skin infection common in dogs.",
            "symptoms": ["Pus-filled lesions", "Hair loss", "Red bumps"],
            "treatment": ["Antibiotics", "Medicated shampoos"]
        },
        "si": {
            "title": "‡∂¥‡∑í‡∂∫‡∑ù‡∂©‡∂ª‡∑ä‡∂∏‡∑è",
            "description": "‡∂∂‡∑ê‡∂ö‡∑ä‡∂ß‡∑ì‡∂ª‡∑í‡∂∫‡∑è ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä‡∑ô‡∂±‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∂± ‡∂∂‡∂Ω‡∑ä‡∂Ω‡∑è‡∂ú‡∑ö ‡∑É‡∂∏‡∑ö ‡∂Ü‡∑É‡∑è‡∂Ø‡∂±‡∂∫.",
            "symptoms": ["‡∂¥‡∑î‡∂¥‡∑î‡∂ª‡∑î ‡∂¥‡∑í‡∂ª‡∑î‡∂´‡∑î ‡§ò‡∑è", "‡∂á‡∑Ö‡∑î ‡∑Ä‡∑ê‡∂ß‡∑ì‡∂∏", "‡∂ª‡∂≠‡∑î ‡∂ú‡∑ê‡∂ß‡∂Ω‡∑î"],
            "treatment": ["‡∂á‡∂±‡∑ä‡∂ß‡∑í‡∂∂‡∂∫‡∑ù‡∂ß‡∑í‡∂ö‡∑ä", "‡∂ñ‡∑Ç‡∂∞ ‡∑Ç‡∑ê‡∂∏‡∑ä‡∂¥‡∑î"]
        }
    },
    "Mange": {
        "en": {
            "title": "Mange",
            "description": "Caused by parasitic mites. Very itchy and contagious.",
            "symptoms": ["Hair loss", "Severe itching", "Crusty skin"],
            "treatment": ["Medicated dips", "Anti-parasitic drugs"]
        },
        "si": {
            "title": "‡∂∏‡∑ê‡∂±‡∑ä‡∂¢‡∑ä",
            "description": "‡∂¥‡∂ª‡∂¥‡∑ù‡∑Ç‡∑ì ‡∂∏‡∂∫‡∑í‡∂ß‡∑ä ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä‡∑ô‡∂±‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑ô‡∂± ‡∂≠‡∂≠‡∑ä‡∂≠‡∑ä‡∑Ä‡∂∫‡∂ö‡∑ä. ‡∂â‡∂≠‡∑è‡∂∏‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑í‡∂∏ ‡∑É‡∑Ñ ‡∑É‡∂∏‡∑ä‡∂¥‡∑ñ‡∂ª‡∑ä‡∂´‡∑Ä ‡∂Ü‡∑É‡∑è‡∂Ø‡∑í‡∂≠‡∂∫‡∑í.",
            "symptoms": ["‡∂á‡∑Ö‡∑î ‡∑Ä‡∑ê‡∂ß‡∑ì‡∂∏", "‡∂â‡∂≠‡∑è‡∂∏‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑í‡∂∏", "‡∂¥‡∑í‡∂ß‡∑î‡∑É‡∑î‡∂±‡∑ä ‡∑É‡∂∏"],
            "treatment": ["‡∂ñ‡∑Ç‡∂∞ ‡∂±‡∑è‡∂±‡∑Ä‡∑è", "‡∂¥‡∂ª‡∂¥‡∑ù‡∑Ç‡∑ì ‡∑Ä‡∑í‡∂ª‡∑ù‡∂∞‡∑ì ‡∂ñ‡∑Ç‡∂∞"]
        }
    },
    "Ringworm": {
        "en": {
            "title": "Ringworm",
            "description": "A fungal infection causing circular patches of hair loss.",
            "symptoms": ["Round hair loss patches", "Scaling skin", "Redness"],
            "treatment": ["Antifungal medication", "Topical creams"]
        },
        "si": {
            "title": "‡∂ª‡∑í‡∂±‡∑ä‡∂ú‡∑ä‡∑Ä‡∑ú‡∂∏‡∑ä",
            "description": "‡∑É‡∂Ç‡∂ö‡∑ä‚Äç‡∂ª‡∑è‡∂∏‡∂ö ‡∂Ö‡∂Ω‡∑í‡∂¥‡∑ê‡∂Ω‡∑ä‡∂Ω‡∂∏ ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä‡∑ô‡∂±‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑ô‡∂± ‡∑É‡∂∏‡∑ö ‡∂Ü‡∑É‡∑è‡∂Ø‡∂±‡∂∫.",
            "symptoms": ["‡∑Ä‡∂ß‡∑è ‡∂á‡∑Ö‡∑î ‡∑Ä‡∑ê‡∂ß‡∑ì‡∂∏", "‡∑É‡∂∏‡∑ö ‡∂¥‡∑í‡∂ß‡∑î‡∑É‡∑î‡∂±‡∑ä", "‡∂ª‡∂≠‡∑î ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂∫"],
            "treatment": ["‡∂Ö‡∂Ω‡∑í‡∂¥‡∑ê‡∂Ω‡∑ä‡∂Ω‡∂∏ ‡∂±‡∑É‡∑è ‡∂Ø‡∑ê‡∂∏‡∑ì‡∂∏‡∑ö ‡∂ñ‡∑Ç‡∂∞", "‡∂¥‡∑ä‚Äç‡∂ª‡∑è‡∂Ø‡∑ö‡∑Å‡∑ì‡∂∫ ‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂∏‡∑ä"]
        }
    },
    "Yeast Infection": {
        "en": {
            "title": "Yeast Infection",
            "description": "Caused by yeast overgrowth, leading to skin irritation.",
            "symptoms": ["Odor", "Itching", "Greasy skin"],
            "treatment": ["Antifungal shampoos", "Topical creams"]
        },
        "si": {
            "title": "‡∂â‡∑É‡∑ä‡∂≠ ‡∑É‡∂±‡∑ä‡∂ö‡∑ä‚Äç‡∂ª‡∂∏‡∂´‡∂∫",
            "description": "‡∂â‡∑É‡∑ä‡∂≠ ‡∂Ö‡∂∞‡∑í‡∂ö ‡∑Ä‡∑ì‡∂∏ ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä‡∑ô‡∂±‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑ô‡∂± ‡∑É‡∂∏‡∑ö ‡∂Ø‡∑ù‡∑Ç.",
            "symptoms": ["‡∂ú‡∂≥", "‡∂ö‡∑í‡∂ª‡∑í‡∂∏", "‡∂¥‡∑ô‡∂≠‡∂ö‡∑ä ‡∑É‡∂∏"],
            "treatment": ["‡∂Ö‡∂Ω‡∑í‡∂¥‡∑ê‡∂Ω‡∑ä‡∂Ω‡∂∏ ‡∂±‡∑É‡∑è ‡∂Ø‡∑ê‡∂∏‡∑ì‡∂∏‡∑ö ‡∑Ç‡∑ê‡∂∏‡∑ä‡∂¥‡∑î", "‡∂¥‡∑ä‚Äç‡∂ª‡∑è‡∂Ø‡∑ö‡∑Å‡∑ì‡∂∫ ‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂∏‡∑ä"]
        }
    }
}

# ---------------------------
# Preprocess Function
# ---------------------------
def preprocess_image(image):
    img = image.resize((224, 224))
    img_array = keras.preprocessing.image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    return keras.applications.mobilenet_v2.preprocess_input(img_array)

# ---------------------------
# UI
# ---------------------------
st.title("üê∂ Dog Skin Disease Classifier")
st.write("Upload a dog skin image to predict the disease and get treatment ideas.")

# Language selection
language = st.radio("Select Language / ‡∂∑‡∑è‡∑Ç‡∑è‡∑Ä ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±", ["English", "‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω"])
lang_key = "si" if language == "‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω" else "en"

# Upload image
uploaded_file = st.file_uploader("Upload Dog Skin Image", type=["jpg", "jpeg", "png"])

# Block unwanted files
if uploaded_file is not None:
    if uploaded_file.name in ["images (1).jpeg", "record.png"]:
        st.error("‚ùå This image is not allowed. Please upload a valid dog skin image.")
        st.stop()
    else:
        try:
            img = Image.open(uploaded_file).convert("RGB")
        except Exception as e:
            st.error(f"Cannot open the uploaded file as an image: {e}")
            st.stop()

        st.image(img, caption="Uploaded Image", use_container_width=True)

        # Preprocess & predict
        img_array = preprocess_image(img)
        features = feature_extractor.predict(img_array)
        prediction = classifier.predict(features)
        predicted_class = classifier.classes_[np.argmax(prediction)]

        st.success(f"‚úÖ Predicted Disease: {predicted_class}")

        # Show predicted disease info
        info = disease_info.get(predicted_class)
        if info:
            content = info.get(lang_key, info.get("en"))
            st.subheader(content.get("title", predicted_class))
            st.write(content.get("description", ""))
            st.markdown("**üêæ Common Symptoms**")
            for s in content.get("symptoms", []):
                st.markdown(f"- {s}")
            st.markdown("**üíä Treatment Ideas**")
            for t in content.get("treatment", []):
                st.markdown(f"- {t}")
        else:
            st.info("No detailed info found for this predicted class. You can add details to `disease_info` dictionary.")

# ---------------------------
# Reference Section
# ---------------------------
st.divider()
st.subheader("üìñ Disease Information (Reference)")

for key, langs in disease_info.items():
    content = langs.get(lang_key, langs.get("en"))
    with st.expander(content.get("title", key)):
        st.write(content.get("description", ""))
        st.markdown("**üêæ Common Symptoms**")
        for s in content.get("symptoms", []):
            st.markdown(f"- {s}")
        st.markdown("**üíä Treatment Ideas**")
        for t in content.get("treatment", []):
            st.markdown(f"- {t}")
